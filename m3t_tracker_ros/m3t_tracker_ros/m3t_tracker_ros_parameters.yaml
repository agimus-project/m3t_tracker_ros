---
m3t_tracker_ros:
  dataset_path:
    type: string
    description: Global path to the precomputed dataset of object modalities.
    validation:
      not_empty<>: []
      custom_validators::check_object_model_path:
    read_only: true

  class_id_regex:
    type: string
    default_value: .*
    description: Regex used to match class id with filename of associated mesh file.
    read_only: true

  image_timeout:
    type: double
    default_value: 5.0
    description: Time [seconds] before image in buffer is considered too old to be used.
    validation:
      gt_eq<>: 0.0
    read_only: true

  filename_format:
    type: string
    default_value: ${class_id}.${file_fmt}
    description: Format in which class id is wrapped to generate filename. Eg. 'tless-${class_id}.${file_fmt}'
      will expect files with name 'tless-obj_000001.obj' and 'tless-obj_000001.m3t_rmb'.
    validation:
      custom_validators::filename_format_correct:
    read_only: true

  use_depth:
    type: bool
    default_value: false
    description: Whether to expect depth images to be published.
    read_only: true

  time_sync_slop:
    type: double
    default_value: 0.05
    description: Delay [seconds] with which incoming messages can be synchronized.
    read_only: true

  detection_to_image_time_slop:
    type: double
    default_value: 0.1
    description: Time difference [seconds] between new detection and image for tracker to
      recover.
    read_only: true

  compensate_camera_motion:
    type: bool
    default_value: false
    description: Whether to recast detection poses to account for camera movement.

  camera_motion_stationary_frame_id:
    type: string
    default_value: world
    description: Stationary frame id to use as a reference when recasting.
    validation:
      not_empty<>: []

  tracker:
    n_corr_iterations:
      type: int
      default_value: 4
      description: Number of times new correspondences are established.
      validation:
        gt_eq<>: 1

    n_update_iterations:
      type: int
      default_value: 2
      description: Number of times the pose is updated for each correspondence iteration.
      validation:
        gt_eq<>: 1

  tracked_objects:
    type: string_array
    default_value: ['']
    description: Class IDs of the objects found in the precomputed modalities folder used
      to track them.
    read_only: true
    validation:
      not_empty<>: []

  __map_tracked_objects:
    max_instances:
      type: int
      default_value: 1
      description: Maximum number of instances of a given type of the object.
      validation:
        gt_eq<>: 1

  optimizer:
    tikhonov_parameter_rotation:
      type: double
      default_value: 1000.0
      description: Regularization parameter for rotation.
      validation:
        gt<>: 0.0

    tikhonov_parameter_translation:
      type: double
      default_value: 30000.0
      description: Regularization parameter for translation.
      validation:
        gt<>: 0.0

  region_modality:
    n_lines_max:
      type: int
      default_value: 200
      description: Number of correspondence lines.
      validation:
        gt_eq<>: 1

    use_adaptive_coverage:
      type: bool
      default_value: false
      description: Flag that specifies if the number of lines is dynamically changed depending
        on the contour length.

    min_continuous_distance:
      type: double
      default_value: 3.0
      description: Minimum distance in segments for which the foreground is not interrupted
        by the background and vice versa.
      validation:
        gt_eq<>: 0.0

    function_length:
      type: int
      default_value: 8
      description: Total length in segments and number of discrete values considered by
        smoothed step functions.
      validation:
        gt_eq<>: 1

    distribution_length:
      type: int
      default_value: 12
      description: Total length in segments and number of discrete values considered for
        the probability density function.
      validation:
        gt_eq<>: 1

    function_amplitude:
      type: double
      default_value: 0.43
      description: Amplitude parameter that models global uncertainty in smoothed step functions.
      validation:
        gt<>: 0.0

    function_slope:
      type: double
      default_value: 0.5
      description: Slope parameter that models local uncertainty in smoothed step functions.
      validation:
        gt<>: 0.0

    learning_rate:
      type: double
      default_value: 1.3
      description: Factor that specifies how far the optimization proceeds in the direction
        of a gradient calculated from finite differences.
      validation:
        gt<>: 0.0

    n_global_iterations:
      type: int
      default_value: 1
      description: Number of global optimization iterations conducted before switching to
        local optimization.
      validation:
        gt_eq<>: 1

    scales:
      type: int_array
      default_value: [6, 4, 2, 1]
      description: Scale for each iteration. If fewer scales than ``n_corr_iterations```
        are given, the last provided scale is used.
      validation:
        not_empty<>: []

    standard_deviations:
      type: double_array
      default_value: [15.0, 5.0, 3.5, 1.5]
      description: User-defined standard deviation for each iteration in pixels. If fewer
        values than ``n_corr_iterations`` are given, the last provided standard deviation
        is used.
      validation:
        not_empty<>: []

    n_histogram_bins:
      type: int
      default_value: 16
      description: Number of bins that is used to discretize each dimension of the RGB color
        space. Has to be 2, 4, 8, 16, 32, or 64.
      validation:
        one_of<>: [[2, 4, 8, 16, 32, 64]]

    learning_rate_f:
      type: double
      default_value: 0.2
      description: Learning rate that is used in the update of the foreground histogram.
      validation:
        gt<>: 0.0

    learning_rate_b:
      type: double
      default_value: 0.2
      description: Learning rate that is used in the update of the background histogram.
      validation:
        gt<>: 0.0

    unconsidered_line_length:
      type: double
      default_value: 0.5
      description: Distance along the line from the center that is not considered in the
        update of color histograms.
      validation:
        gt<>: 0.0

    max_considered_line_length:
      type: double
      default_value: 20.0
      description: Maximum length along the line that is considered in the update of color
        histograms.
      validation:
        gt<>: 0.0

    model_occlusion:
      type: bool
      default_value: false
      description: Enables occlusion modeling for region modality.
      read_only: true

    n_unoccluded_iterations:
      type: int
      default_value: 10
      description: Number of iterations after occlusion handling is turned off.
      validation:
        gt_eq<>: 0

    min_n_unoccluded_lines:
      type: int
      default_value: 0
      description: Minimum number of lines that have to be valid. Otherwise, occlusion handling
        is turned off.
      validation:
        gt_eq<>: 0

    measure_occlusions:
      type: bool
      default_value: false
      description: Enables measuring of occlusions for region modality from depth sensor.
        Requires ``use_depth`` param to be true.
      read_only: true

    measured_depth_offset_radius:
      type: double
      default_value: 0.01
      description: Radius in meter that specifies the depth offset provided by the region
        model and that is used to measure occlusions.
      validation:
        gt_eq<>: 0.0

    measured_occlusion_radius:
      type: double
      default_value: 0.01
      description: Radius in meter that defines the area in which depth measurements from
        a depth camera are considered for occlusion handling.
      validation:
        gt_eq<>: 0.0

    measured_occlusion_threshold:
      type: double
      default_value: 0.03
      description: Defines how much smaller the minimum value from the depth camera is allowed
        to be compared to the value that is expected from the current estimate.
      validation:
        gt_eq<>: 0.0

    modeled_depth_offset_radius:
      type: double
      default_value: 0.01
      description: Radius in meter that specifies the depth offset provided by the region
        model and that is used to model occlusions.
      validation:
        gt_eq<>: 0.0

    modeled_occlusion_radius:
      type: double
      default_value: 0.01
      description: Radius in meter that defines the area in which depth measurements from
        a focused depth renderer are considered for occlusion handling.
      validation:
        gt_eq<>: 0.0

    modeled_occlusion_threshold:
      type: double
      default_value: 0.03
      description: Defines how much smaller the minimum value from the focused depth renderer
        is allowed to be compared to the value that is expected from the current estimate.
      validation:
        gt<>: 0.0

  use_depth_modality:
    type: bool
    default_value: false
    description: Enable use of depth modality. Requires ``use_depth`` param to be true.
    read_only: true

  depth_modality:
    n_points_max:
      type: int
      default_value: 200
      description: Number of correspondence points.
      validation:
        gt_eq<>: 1

    use_adaptive_coverage:
      type: bool
      default_value: false
      description: Flag that specifies if the number of points is dynamically changed depending
        on the surface area.

    reference_surface_area:
      type: double
      default_value: 0.0
      description: Reference value that is considered if ``use_adaptive_coverage`` is ``true``.
        The number of points is adapted depending on the ratio between the current surface
        area and this value. If the surface area is bigger or equal to this value the number
        of points is set to ``n_points_max``. If ``reference_surface_area`` <= ``0.0`` the
        ``max_surface_area`` value from the depth model is used.

    stride_length:
      type: double
      default_value: 0.005
      description: Distance in meter between points that are sampled during the correspondence
        search.
      validation:
        gt<>: 0.0

    considered_distances:
      type: double_array
      default_value: [0.05, 0.02, 0.01]
      description: Considered distance for each iteration. The distance defines the area
        in meter in which points are sampled during the correspondence search. If fewer
        values than ``n_corr_iterations`` are given, the last provided distance is used.
      validation:
        not_empty<>: []

    standard_deviations:
      type: double_array
      default_value: [0.05, 0.03, 0.02]
      description: User-defined standard deviation for each iteration in meter. If fewer
        values than ``n_corr_iterations`` are given, the last provided standard deviation
        is used.
      validation:
        not_empty<>: []

    n_unoccluded_iterations:
      type: int
      default_value: 10
      description: Number of iterations after occlusion handling is turned off.
      validation:
        gt_eq<>: 0

    min_n_unoccluded_points:
      type: int
      default_value: 0
      description: 'Minimum number of points that have to be valid. Otherwise, occlusion
        handling is turned off. '
      validation:
        gt_eq<>: 0

    measure_occlusions:
      type: bool
      default_value: false
      description: Enables occlusion measurement for depth modality.
      read_only: true

    measured_depth_offset_radius:
      type: double
      default_value: 0.01
      description: Radius in meter that specifies the depth offset provided by the depth
        model and that is used to measure occlusions.
      validation:
        gt<>: 0.0

    measured_occlusion_radius:
      type: double
      default_value: 0.01
      description: Radius in meter that defines the area in which depth measurements from
        a depth camera are considered for occlusion handling.
      validation:
        gt<>: 0.0

    measured_occlusion_threshold:
      type: double
      default_value: 0.03
      description: Defines how much smaller the minimum value from the depth camera is allowed
        to be compared to the value that is expected from the current estimate.
      validation:
        gt<>: 0.0

    model_occlusion:
      type: bool
      default_value: false
      description: Enables occlusion modeling for depth modality.

    modeled_depth_offset_radius:
      type: double
      default_value: 0.01
      description: Radius in meter that specifies the depth offset provided by the depth
        model and that is used to model occlusions.
      validation:
        gt<>: 0.0

    modeled_occlusion_radius:
      type: double
      default_value: 0.01
      description: radius in meter that defines the area in which depth measurements from
        a focused depth renderer are considered for occlusion handling.
      validation:
        gt<>: 0.0

    modeled_occlusion_threshold:
      type: double
      default_value: 0.03
      description: Defines how much smaller the minimum value from the focused depth renderer
        is allowed to be compared to the value that is expected from the current estimate.
      validation:
        gt<>: 0.0

  use_texture_modality:
    type: bool
    default_value: false
    description: Enables use of texture modality.
    read_only: true

  texture_modality:
    descriptor_type_name:
      type: string
      default_value: ORB
      description: Specifies the descriptor type that defines which descriptor and detector
        pair is used.
      validation:
        one_of<>: [[BRISK, DAISY, FREAK, SIFT, ORB, ORB_CUDA]]

    focused_image_size:
      type: int
      default_value: 200
      description: Specifies the size of the image crop in which features are detected.
      validation:
        gt<>: 0

    descriptor_distance_threshold:
      type: double
      default_value: 0.7
      description: Specifies the minimum difference of the Hamming distance between the
        best and second-best match.
      validation:
        gt<>: 0.0

    tukey_norm_constant:
      type: double
      default_value: 20.0
      description: Defines the maximum expected value for valid residual errors in image
        space in pixel.
      validation:
        gt<>: 0.0

    standard_deviations:
      type: double_array
      default_value: [15.0, 5.0]
      description: User-defined standard deviation for each iteration in pixels. If fewer
        values than ``n_corr_iterations``` are given, the last provided standard deviation
        is used.
      validation:
        not_empty<>: []

    max_keyframe_rotation_difference:
      type: double
      # default value based on 10.0 * pi / 180.0;
      default_value: 0.174532925
      description: Defines after which rotational difference in radian a new keyframe is
        reconstructed.
      validation:
        gt<>: 0.0

    max_keyframe_age:
      type: int
      default_value: 100
      description: Specifies after how many iterations a new keyframe has to be generated,
        even if the rotational difference criterion is not fulfilled.
      validation:
        gt<>: 0

    n_keyframes:
      type: int
      default_value: 1
      description: How many keyframes are considered at the same time.
      validation:
        gt_eq<>: 1

    orb_n_features:
      type: int
      default_value: 300
      description: Number of features considered by ORB detector.
      validation:
        gt<>: 0

    orb_scale_factor:
      type: double
      default_value: 1.2
      description: Scale factor used by ORB detector.
      validation:
        gt<>: 0.0

    orb_n_levels:
      type: int
      default_value: 3
      description: Number of levels considered by ORB detector.
      validation:
        gt<>: 0

    brisk_threshold:
      type: int
      default_value: 25
      description: Threshold used by BRISK detector.
      validation:
        gt<>: 0

    brisk_octave:
      type: int
      default_value: 3
      description: Number of detection octaves considered by BRISK detector.
      validation:
        gt<>: 0

    brisk_pattern_scale:
      type: double
      default_value: 0.6
      description: Scale applied to the pattern that is used to sample the neighborhood
        of a BRISK keypoint.
      validation:
        gt<>: 0.0

    daisy_radius:
      type: double
      default_value: 7.0
      description: Radius of the DAISY descriptor at initial scale.
      validation:
        gt<>: 0.0

    daisy_q_radius:
      type: int
      default_value: 3
      description: Radial range division quantity for DAISY descriptor.
      validation:
        gt<>: 0

    daisy_q_theta:
      type: int
      default_value: 4
      description: Angular range division quantity for DAISY descriptor.
      validation:
        gt<>: 0

    daisy_q_hist:
      type: int
      default_value: 8
      description: Gradient orientations range division quantity for DAISY descriptor.
      validation:
        gt<>: 0

    freak_orientation_normalized:
      type: bool
      default_value: true
      description: Enable orientation normalization for FREAK descriptor.

    freak_scale_normalized:
      type: bool
      default_value: true
      description: Enable scale normalization for FREAK descriptor.

    freak_pattern_scale:
      type: double
      default_value: 18.0
      description: Scaling of the FREAK description pattern.
      validation:
        gt<>: 0.0

    freak_n_octaves:
      type: int
      default_value: 4
      description: Number of octaves covered by detected keypoints for FREAK descriptor.
      validation:
        gt<>: 0

    sift_n_features:
      type: int
      default_value: 0
      description: Number of best features to retain by SIFT detector.
      validation:
        gt_eq<>: 0

    sift_n_octave_layers:
      type: int
      default_value: 5
      description: Number of layers in each octave considered by SIFT detector
      validation:
        gt<>: 0

    sift_contrast_threshold:
      type: double
      default_value: 0.04
      description: Contrast threshold used to filter out weak features in semi-uniform regions
        by SIFT detector.
      validation:
        gt<>: 0.0

    sift_edge_threshold:
      type: double
      default_value: 10.0
      description: Threshold used to filter out edge-like features by SIFT detector.
      validation:
        gt<>: 0.0

    sift_sigma:
      type: double
      default_value: 0.7
      description: 'Sigma of the Gaussian applied to the input image at the octave #0 by
        SIFT detector.'
      validation:
        gt<>: 0.0

    measure_occlusions:
      type: bool
      default_value: false
      description: Enables measuring of occlusions for texture modality from depth sensor.
        Requires ``use_depth`` param to be true.
      read_only: true

    measured_occlusion_radius:
      type: double
      default_value: 0.01
      description: Radius in meter that defines the area in which depth measurements from
        a depth camera are considered for occlusion handling.
      validation:
        gt<>: 0.0

    measured_occlusion_threshold:
      type: double
      default_value: 0.03
      description: Defines how much smaller the minimum value from the depth camera is allowed
        to be compared to the value that is expected from the current estimate.
      validation:
        gt<>: 0.0

    model_occlusion:
      type: bool
      default_value: false
      description: Enables occlusion modeling for texture modality.
      read_only: true

    modeled_occlusion_radius:
      type: double
      default_value: 0.01
      description: Radius in meter that defines the area in which depth measurements from
        a focused depth renderer are considered for occlusion handling.
      validation:
        gt<>: 0.0

    modeled_occlusion_threshold:
      type: double
      default_value: 0.03
      description: Defines how much smaller the minimum value from the focused depth renderer
        is allowed to be compared to the value that is expected from the current estimate.
      validation:
        gt<>: 0.0
